<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sGamer</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-3</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>vx = 0;
vy = 0;
moveVel = 1;

dead = false;
deadCtr = 0;
deadBounce = 0;

facing = 1;
shake = 0;
clueless = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// update

if (dead)
{
    facing = 1;
    
    if (deadCtr &gt; 0)
        deadCtr--;
    else
    {
        shake = 0;
        
        if (deadBounce == 0) // fresh meat
        {
            image_blend = COL.WHITE;
            sprite_index = sGamerOuch;
            image_index = sign(vx) + 1;
            image_speed = 0;
            
            image_angle -= 3 * sign(vx);
        }
        else if (deadBounce == 1) // bounced once
        {
            image_blend = merge_colour(image_blend, COL.GRAY, 0.2);
            sprite_index = sGamerOuch;
            image_index = 1;
            image_speed = 0;
            
            image_angle -= 10 * sign(vx);
        }
        else // dead
        {
            image_blend = c_white;
            sprite_index = sGamerDead;
            if (vx != 0)
                image_index = sign(vx) * 0.5 + 0.5;
            image_speed = 0;
        }
        
        vy += 0.2;
        
        if (deadBounce &gt;= 2)
        {
            if (image_alpha &gt; 0)
                image_alpha -= 0.05;
            else
                instance_destroy(id);
        }
    }
}
else
{
    // chase EL DORO
    if (!clueless)
        vx = sign(oPIZZA.x - x) * moveVel;

    if (vx != 0)
        facing = sign(vx);
}

if (deadCtr &lt;= 0)
{
    x += vx;
    y += vy;
}

// bounce
if (dead &amp;&amp; y &gt; GROUND_Y)
{
    image_angle = 0;
    y = GROUND_Y;
    deadBounce++;
    
    // sound effect
    if (vy &gt; 2)
        emit_sfx(sndImpact2, 1, random_range(0.95, 1.05));
    
    if (deadBounce &lt; 2)
        vy *= -0.8;
    else
        vy = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="oSMASH">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// dead
vx = random_range(-5, 5);
vy = random_range(-8, -2);

if (!dead)
{
    shake = 4;
    dead = true;
    deadCtr = 8;
    
    // sound effect
    // warning : secret willhelm
    emit_sfx(choose(sndWILLHELM, sndGamerHurt, sndGamerHurt, sndGamerHurt, sndGamerHurt, sndGamerHurt, sndGamerHurt), 1, random_range(0.95, 1.05));
}
else if (deadBounce == 0)
    deadBounce++;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="oFX_BOOM">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// dead
vx = random_range(-5, 5);
vy = random_range(-8, -2);

if (!dead)
{
    shake = 4;
    dead = true;
    deadCtr = 8;
    
    // sound effect
    emit_sfx(sndGamerHurt, 1, random_range(0.95, 1.05));
}
else if (deadBounce == 0)
    deadBounce++;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="oBULLET">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// dead
if (other.hitPan)
{
    vx = random_range(-3, 3);
    vy = random_range(-6, -4);
    
    if (!dead)
    {
        shake = 4;
        dead = true;
        deadCtr = 8;
        
        // score
        global.gameScore += 10;
        
        // sound effect
        // warning : secrete willhelm
        var _fx = sndGamerHurt, _rand = random_range(0, 100);
        if (_rand &lt;= 2)
            _fx = sndWILLHELM;
            
        emit_sfx(_fx, 1, random_range(0.95, 1.05));
        
        other.hitLeft--;
        if (other.hitLeft &lt;= 0)
            instance_destroy(other);
    }
    else if (deadBounce == 0)
    {
        deadBounce++;
        other.hitLeft--;
        if (other.hitLeft &lt;= 0)
            instance_destroy(other);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// draw gamer

var _shx = random_range(-shake, shake), _shy = random_range(-shake, shake);
draw_sprite_ext(sprite_index, image_index, x + _shx, y + _shy, image_xscale * facing, image_yscale, image_angle, image_blend, image_alpha);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
