<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sPlayer</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-6</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>dead = false;
deadBounce = 0;

facing = 1;
image_speed = 0;

gunCtr = 0;
canGun = true;

gunx = 0;
guny = -18;
gunRot = 90;
gunFacing = 1;
gunShake = 0;

vx = 0;
vy = 0;
moveVel = 4;

animBounce = 0;
animT = 0;

// tutorial stuff
tutMoved = 0;
tutSchut = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// input
var _hmove = keyboard_check(vk_right) - keyboard_check(vk_left);
var _keyshoot = keyboard_check_pressed(ord('Z'));

// move!!
if (!dead)
{
    if (_hmove != 0)
    {
        vx = moveVel * _hmove;
        animBounce = lerp(animBounce, 4, 0.5);
    }
    else
    {
        vx = 0;
        animBounce = lerp(animBounce, 0, 0.5);
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// update pos
x += vx;
y += vy;

// tutorial stuff
if (global.intro)
    tutMoved += abs(vx);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// schut
if (!dead)
{
    if (!canGun)
    {
        if (gunCtr &gt; 0)
            gunCtr--;
        else
            canGun = true;
    }
    else if (_keyshoot)
    {
        gunx = -12 * facing;
        guny = -8;
        gunRot += 16 * facing;
        gunShake = 4;
        gunCtr = 1;
        canGun = false;
        
        // bullet
        var _inst = instance_create(x, bbox_top, oBULLET);
        _inst.vy = -8;
        
        // muzzleflash effect
        _inst = instance_create(x + gunx + lengthdir_x(6, gunRot), y + guny + lengthdir_y(6, gunRot), oFX_FLASH);
        
        // shook
        global.shake += 1;
        
        // sound effect
        emit_sfx(sndShoot, 1, random_range(0.95, 1.05));
        
        // tutorial stuff
        if (global.intro)
            tutSchut++;
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// update gun &amp; facing stuff
if (vx != 0)
    facing = sign(vx);

// move effect
if (gunRot &gt;= 82 &amp;&amp; gunRot &lt;= 98)
    gunRot = clamp(gunRot + vx * 0.5, 82, 98);
if (gunx &gt;= -4 &amp;&amp; gunx &lt;= 4)
    gunx = clamp(gunx - vx * 0.2, -4, 4);

// springy
gunRot = lerp(gunRot, 90, 0.1);
gunShake = lerp(gunShake, 0, 0.1);
    
gunx = lerp(gunx, 0, 0.1);
guny = lerp(guny, -18, 0.1);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// dead
if (dead &amp;&amp; !global.gameOver)
{
    vy += 0.2;

    if (deadBounce == 0)
        image_angle -= vx * 10;
    else
        image_angle = lerp(image_angle, 180, 0.2);
    
    if (x &lt; 0 &amp;&amp; vx &lt; 0)
    {
        x = 0;
        vx *= -0.85;
        
        // sound effect
        emit_sfx(choose(sndPlayerHit1, sndPlayerHit2), random_range(0.6, 0.9), random_range(0.9, 1.1));
    }
    
    if (x &gt; room_width &amp;&amp; vx &gt; 0)
    {
        x = room_width;
        vx *= -0.85;
        
        // sound effect
        emit_sfx(choose(sndPlayerHit1, sndPlayerHit2), random_range(0.6, 0.9), random_range(0.9, 1.1));
    }
    
    if (y &gt; GROUND_Y &amp;&amp; vy &gt; 0)
    {
        if (deadBounce == 0)
        {
            y = GROUND_Y;
            vy *= -0.85;
            deadBounce++;
            
            // sound effect
            emit_sfx(sndImpact2, random_range(0.6, 0.9), random_range(0.9, 1.1));
        }
        else if (y &gt; room_height + 42)
        {
            global.gameOver = true;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="oSMASH">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!dead)
{
    dead = true;
    vx = random_range(-8, 8);
    vy = random_range(-16, -4);
    
    // sound effect
    emit_sfx(choose(sndPlayerHit1, sndPlayerHit2), random_range(0.9, 1.0), random_range(0.95, 1.05));
    emit_sfx(sndGamerHurt, random_range(0.9, 1.0), random_range(0.95, 1.05));
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="oPAN">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (other.vy &gt; 0 &amp;&amp; !dead)
{
    dead = true;
    vx = random_range(-8, 8);
    vy = random_range(-16, -4);
    
    // sound effect
    emit_sfx(sndGamerHurt, 1, random_range(0.95, 1.05));
    emit_sfx(choose(sndPlayerHit1, sndPlayerHit2), random_range(0.9, 1.0), random_range(0.95, 1.05));
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// draw player
animT++;
var _bounce = abs(sin(animT * 0.3)) * -animBounce;

if (abs(vx) &gt; 1)
    image_index = 1;
else
    image_index = 0;

draw_sprite_ext(sprite_index, image_index, x, y + _bounce, image_xscale * facing, image_yscale, image_angle, image_blend, image_alpha);

// draw gun
if (!dead)
{
    var _shx = random_range(-gunShake, gunShake), _shy = random_range(-gunShake, gunShake);
    draw_sprite_ext(sGun, 0, x + gunx + _shx, y + guny + _shy, 1, gunFacing * facing, gunRot, c_white, 1);
}
// give'er!
//draw_set_halign(1); draw_set_valign(1);
//ui_text(room_width &gt;&gt; 1, room_height &gt;&gt; 1, "GIVE ER'!", 1, 1, 0, $FFC9C3, 1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
